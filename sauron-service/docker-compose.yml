version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.9.3
    container_name: elasticsearch
    volumes:
      - type: bind
        source: ./docker/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:7.9.3
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200

  sauron-service:
    image: sauron-service
    container_name: sauron-service
    depends_on:
      - elasticsearch
    deploy:
      resources:
        limits:
          memory: 4048m
      restart_policy:
        condition: on-failure
    environment:
      SPRING_CONFIG_LOCATION: /sauron/config/sauron-service.yml
      M2_HOME: "/usr/share/maven"
      SPRING_PROFILES_INCLUDE: "local"
      SPRING_CLOUD_CONFIG_ENABLED: "false"
    volumes:
      - type: bind
        source: ./docker/config/sauron-service.yml
        target: /sauron/config/sauron-service.yml
        read_only: true
      - type: bind
        source: ./plugins
        target: /sauron/plugins
      - type: bind
        source: ~/.m2
        target: /root/.m2
      - type: bind
        source: ~/.gradle
        target: /root/.gradle
      - type: bind
        source: ~/.pip
        target: /root/.pip
      - type: bind
        source: ~/.npmrc
        target: /root/.npmrc
      - type: bind
        source: ~/.ssh
        target: /root/.ssh
        read_only: true
    ports:
      - "8080:8080"